# This project requires currently Python 3.2 (     not 3.1, not 3.3 ;(     )
# If you're on OS X, I suggest Homebrew, rather than MacPorts or Fink.



#### For Debian-based systems 
apt-get install g++  libpcre3-dev zlib1g-dev libssl-dev python-dev swig libfreetype6 libfreetype6-dev libjpeg8-dev libjpeg8 libzzip-dev libxml2-dev libxslt-dev python3 python3-dev libmagic-dev python-imaging java-common yui-compressor gnupg make git-core scons libpq-dev

### for OS X
brew install gnupg yuicompressor exiv2 libmagic mongodb python3 Boost gnu-sed scons


ln -s /usr/bin/python3.2 /usr/bin/python


#On 64 bit
apt-get install lib32z1


sudo apt-key adv --keyserver keyserver.ubuntu.com --recv 7F0CEB10
echo "deb http://downloads-distro.mongodb.org/repo/debian-sysvinit dist 10gen" >> /etc/apt/sources.list

apt-get update
apt-get install mongodb-10gen


cd /usr/local/src
wget http://nginx.org/download/nginx-1.3.8.tar.gz
tar xvfz nginx-1.3.8.tar.gz
cd nginx-1.3.8
wget http://nginx.org/patches/spdy/patch.spdy-53.txt
patch -p0 < patch.spdy-53.txt

git clone https://github.com/vkholodkov/nginx-upload-module.git
cd nginx-upload-module
git checkout 2.2
cd ..

git clone https://github.com/mdirolf/nginx-gridfs.git
CFLAGS="$CFLAGS -Wno-missing-field-initializers"
cd nginx-gridfs
git submodule init
git submodule update
cd mongo-c-driver
git checkout v0.3.1
cd ../..

	# on Linux
	./configure --add-module=/usr/local/src/nginx-1.3.8/nginx-upload-module --add-module=/usr/local/src/nginx-1.3.8/nginx-gridfs  --with-http_ssl_module  --prefix=/opt/nginx
	# On OS X
	./configure --with-ld-opt="-L /usr/local/lib"  --add-module=/usr/local/src/nginx-1.3.3/nginx-upload-module --add-module=/usr/local/src/nginx-1.3.3/nginx-gridfs --with-http_ssl_module  --prefix=/opt/nginx
make
make install

mkdir /opt/uploads
chmod 777 /opt/uploads/

cd /opt
git clone git@github.com:e1ven/Tavern.git

cd /opt/Tavern/nginx
cp nginx.conf /opt/nginx/conf/


cd /opt/Tavern/libs
curl -O http://pypi.python.org/packages/source/d/distribute/distribute-0.6.30.tar.gz
tar -xzvf distribute-0.6.30.tar.gz
cd distribute-0.6.30
python3 setup.py install
/usr/local/bin/easy_install-3.2 pip

cd /opt/Tavern
pip-3.2 install -r requirements.txt


mkdir -p /usr/local/share/GeoIP
cp libs/GeoIPCity.dat /usr/local/share/GeoIP/GeoIPCity.dat


cd /opt/Tavern/libs
git clone https://github.com/grahame/pil-py3k
cd pil-py3k
# Enable jpg support by linking, on 64 bit linux.
    vi setup.py
    on page 196, add
    add_directory(library_dirs, "/usr/lib/x86_64-linux-gnu")

python3 setup.py install


cd /opt/Tavern/libs
git clone https://github.com/fancycode/pylzma.git
cd pylzma
python3 setup.py install


echo "/usr/bin/python /opt/Tavern/TopicList.py" > /etc/cron.hourly/generatetopics
echo "/usr/bin/python /opt/Tavern/ModList.py" > /etc/cron.daily/findmods


mkdir -p /var/www/cache/tmp

ln -s /opt/Tavern/libs/Tavern /etc/init.d/


cd /opt/Tavern/
python ./generateNginx.py 

/etc/init.d/mongodb start
/opt/nginx/sbin/nginx

/etc/init.d/Tavern start


SETTINGS
Most settings should work automatically out of the box, but you may want to modify Domains to run things on your own.
For instance, the serversetting 'embedserver' sends users to embed.is for embedded iframes.
Feel free to run your own embed server, and change this setting to use it.

Also, for production, you should change probably run a separate binaries server from / to a new domain.
This will prevent cookie reading attacks.


